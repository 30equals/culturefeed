<?php
/**
 * @file
 * CultureFeed Social adds the ability to social actions (example like, comments, follow) on culturefeed items like events, productions, pages...
 */

module_load_include('inc', 'culturefeed_social', 'includes/helpers');

/**
 * Max items per page / block.
 */
define('CULTUREFEED_SOCIAL_BLOCK_USER_ACTIVITIES_COUNT', 10);
define('CULTUREFEED_SOCIAL_PAGE_USER_ACTIVITIES_COUNT', 20);
define('CULTUREFEED_SOCIAL_PAGE_NOTIFICATIONS_COUNT', 50);

/**
 * Implements hook_menu().
 */
function culturefeed_social_menu() {

  $items = array();
  $items['culturefeed/ajax/user/activities'] = array(
    'page callback' => 'culturefeed_social_page_ajax_get_activities',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['admin/config/services/culturefeed_social'] = array(
    'title' => 'Culture Feed Social',
    'description' => 'Change Culture Feed Social settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_social_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.inc',
  );

  $items['culturefeed/activities'] = array(
    'title callback' => FALSE,
    'title' => 'Beheer acties',
    'page callback' => 'culturefeed_social_page_activities',
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/activity/delete/%/%'] = array(
    'title callback' => FALSE,
    'title' => 'Actie ongedaan maken',
    'page callback' => 'culturefeed_social_page_activity_delete',
    'page arguments' => array(3, 4),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/activity/privacy/%/%/%'] = array(
    'title callback' => FALSE,
    'title' => 'Actie privacy status instellen',
    'page callback' => 'culturefeed_social_page_activity_privacy',
    'page arguments' => array(3, 4, 5),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  // Activity.
  $items['culturefeed/do/%/%/%'] = array(
    'title callback' => FALSE,
    'title' => 'Actie doen',
    'page callback' => 'culturefeed_social_page_do',
    'page arguments' => array(2, 3, 4),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/do/%/%/%/noredirect'] = array(
    'title callback' => FALSE,
    'title' => array('Actie doen'),
    'page callback' => 'culturefeed_social_page_do',
    'page arguments' => array(2, 3, 4, 'noredirect'),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/do/%/%/%/advanced'] = array(
    'title callback' => FALSE,
    'title' => array('Actie doen'),
    'page callback' => 'culturefeed_social_page_do',
    'page arguments' => array(2, 3, 4, 'advanced'),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/undo/%/%/%'] = array(
    'title callback' => FALSE,
    'title' => array('Actie ongedaan maken'),
    'page callback' => 'culturefeed_social_page_undo',
    'page arguments' => array(2, 3, 4),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/undo/%/%/%/noredirect'] = array(
    'title callback' => FALSE,
    'title' => array('Actie ongedaan maken'),
    'page callback' => 'culturefeed_social_page_undo',
    'page arguments' => array(2, 3, 4, 'noredirect'),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/undo/%/%/%/advanced'] = array(
    'title callback' => FALSE,
    'title' => array('Actie ongedaan maken'),
    'page callback' => 'culturefeed_social_page_undo',
    'page arguments' => array(2, 3, 4, 'advanced'),
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  // Notifications
  $items['culturefeed/notifications'] = array(
    'title callback' => FALSE,
    'title' => 'Mijn meldingen',
    'page callback' => 'culturefeed_social_page_notifications',
    'access callback' => 'culturefeed_is_culturefeed_user',
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  return $items;

}

/**
 * Implements hook_theme().
 */
function culturefeed_social_theme() {

  $path = drupal_get_path('module', 'culturefeed_social') . '/theme';

  return array(

    'culturefeed_social_user_activity_list' => array(
      'variables' => array(
        'activities' => array(),
        'class' => NULL,
        'pager_path' => NULL,
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-social-user-activity-list',
    ),
    'culturefeed_social_user_activity_summary' => array(
      'variables' => array(
        'activity' => NULL,
        'uid' => 0,
      ),
      'template' => 'culturefeed-social-user-activity-summary',
      'path' => $path,
      'file' => 'theme.inc',
    ),
    'culturefeed_social_user_notifications_page' => array(
      'variables' => array(
        'notifications' => NULL,
      ),
      'template' => 'culturefeed-social-user-notifications-page',
      'path' => $path,
      'file' => 'theme.inc',
    ),
  );

}

/**
 * Implements hook_block_info().
 */
function culturefeed_social_block_info() {

  $blocks = array();

  $blocks['user-activities'] = array(
    'info' => t('User activities'),
    'cache' => DRUPAL_NO_CACHE,
  );

  $blocks['recommended-by'] = array(
    'info' => t('Recommended by'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;

}

/**
 * Implements hook_block_view().
 */
function culturefeed_social_block_view($delta) {

  module_load_include('inc', 'culturefeed_social', 'includes/blocks');
  $block = array();

  switch ($delta) {

    case 'user-activities':
      $account = menu_get_object('user');
      return culturefeed_social_block_user_activities($account);

      case 'recommended-by':
        $object = culturefeed_search_get_active_object();
        return culturefeed_social_block_recommended_by($object);

  }

  return $block;

}

/**
 * Implements hook_culturefeed_ui_profile_menu_alter().
 */
function culturefeed_social_culturefeed_ui_profile_menu_alter(&$items) {

  $items[] =     array(
    'title' => 'Acties',
    'url' => 'culturefeed/activities',
    'description' => 'Stel in welke acties (Leuk, Deel, Tweet, ...) voor anderen zichtbaar zijn in je UiTiD-profiel.',
  );

}

/**
 * Implements hook_culturefeed_ui_profile_box_main_items().
 */
function culturefeed_social_culturefeed_ui_profile_box_main_items() {

  $items = array();
  try {

    $notification_count = DrupalCultureFeed::getNotificationsCount(DrupalCultureFeed::getLoggedInUserId());

    if (isset($notification_count[Culturefeed::NOTIFICATION_TYPE_NEW])) {
      $items['notifications'] = array(
        'data' => l($notification_count[Culturefeed::NOTIFICATION_TYPE_NEW], 'culturefeed/notifications'),
        'class' => 'notifications',
        'weight' => -20,
      );

      if ($notification_count[Culturefeed::NOTIFICATION_TYPE_NEW] > 0) {
        $items['notifications']['class'] .= ' has-new';
      }

    }

  }
  catch (Exception $e) {
    watchdog_exception('culturefeed_social', $e);
  }

  return $items;

}

/**
 * Form to filter on user activities.
 */
function culturefeed_social_user_activity_filter_form($form, $form_state, $active_filter = 'all', $in_block = FALSE, $account = NULL) {

  $form = array();
  $activity_filters = culturefeed_social_get_activity_filter_options(TRUE);
  if (!$activity_filters) {
    return;
  }

  $activity_filters = array('all' => 'Alles') + $activity_filters;
  $form['filter'] = array(
    '#type' => 'select',
    '#options' => $activity_filters,
    '#title' => 'Filter gebeurtenissen op',
    '#default_value' => $active_filter,
  );

  $query = array();
  if ($account) {
    $query['culturefeed_uid'] = $account->culturefeed_uid;
  }

  // If the form is shown in a block. Filtering is done by ajax.
  if ($in_block) {
    $form['filter_url'] = array(
      '#type' => 'hidden',
      '#value' => url('culturefeed/ajax/user/activities', array('query' => $query)),
    );
  }
  else {
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Filter',
    );
  }

  return $form;

}

/**
 * Submit the user activity filter.
 */
function culturefeed_social_user_activity_filter_form_submit($form, &$form_state) {

  $type = $form_state['values']['filter'];

  if ($type > -1 && $type != 'all') {
    drupal_goto('culturefeed/activities/' . $type);
  }
  else {
    drupal_goto('culturefeed/activities');
  }

}