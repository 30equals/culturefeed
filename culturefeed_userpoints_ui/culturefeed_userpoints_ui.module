<?php
/**
 * @file
 * Creates components to use in the user interface and integrates with
 * other Culturefeed objects.
 */

module_load_include('inc', 'culturefeed_userpoints_ui', 'includes/helpers');

/**
 * Implements hook_menu().
 */
function culturefeed_userpoints_ui_menu() {

  $items = array();

  $items['culturefeed/userpoints/exchange'] = array(
    'title' => 'Ruil je punten in',
    'title callback' => FALSE,
    'description' => 'Exchange your userpoints',
    'page callback' => 'culturefeed_userpoints_ui_exchange_page',
    'access callback' => 'culturefeed_userpoints_ui_can_exchange',
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/userpoints/%/%/select/%'] = array(
    'title' => 'Selecteer voordeel',
    'title callback' => FALSE,
    'description' => 'Select the promotion to exchange for userpoints.',
    'page callback' => 'culturefeed_userpoints_ui_promotion_select_page',
    'page arguments' => array(2, 3, 5),
    'access callback' => 'culturefeed_userpoints_ui_can_exchange',
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/userpoints/%/remove/%'] = array(
    'title' => 'Deselecteer voordeel',
    'title callback' => FALSE,
    'description' => 'Remove the promotion from the wishlist.',
    'page callback' => 'culturefeed_userpoints_ui_page_remove_promotion',
    'page arguments' => array(2, 4),
    'access callback' => 'culturefeed_userpoints_ui_can_exchange',
    'file' => 'includes/pages.inc',
  );

  $items['culturefeed/userpoints'] = array(
    'title' => 'Ruil je punten in',
    'title callback' => FALSE,
    'description' => 'Exchange your userpoints',
    'page callback' => 'culturefeed_userpoints_ui_exchange_page',
    'access callback' => 'culturefeed_userpoints_ui_can_exchange',
    'file' => 'includes/pages.inc',
  );

  $items['admin/config/services/userpoints'] = array(
    'title' => 'Culturefeed Userpoints User Interface',
    'description' => 'All configurations to adjust the behavior of userpoints for this site',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('culturefeed_userpoints_ui_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'includes/admin.inc',
  );

  $items['culturefeed/promotion/%culturefeed_userpoints_promotion'] = array(
    'title' => 'Detail',
    'title callback' => FALSE,
    'description' => 'Detail of a promotion',
    'page callback' => 'culturefeed_userpoints_ui_detail_page',
    'page arguments' => array(2),
    'access arguments' => array('access content'),
    'file' => 'includes/pages.inc',
  );

  return $items;
}

/**
 * Load callback for one userpoints promotion.
 * @param Integer $id
 */
function culturefeed_userpoints_promotion_load($id) {

  $detail = NULL;

  try {
    // @todo: create this shit.
    $detail = DrupalCulturefeed::getActivityPointsPromotion($id);
  }
  catch (Exception\ClientErrorResponseException $e) {
    watchdog_exception('culturefeed_userpoints_ui', $e);
    $build = "Er is een fout opgetreden tijdens het laden van de promotie.";
  }
  catch (Exception\CurlException $e) {
    watchdog_exception('culturefeed_userpoints_ui', $e);
    $build = "Er is een fout opgetreden tijdens het laden van de promotie.";
  }
  catch (CultureFeed_ParseException $e) {
    watchdog_exception('culturefeed_userpoints_ui', $e);
    $build = "Er is een fout opgetreden tijdens het laden van de promotie.";
  }

  return $detail;

}

/**
 * Access callback to be able to exchange points into gifts.
 */
function culturefeed_userpoints_ui_can_exchange() {
  return DrupalCultureFeed::isCultureFeedUser();
}

/**
 * Implements hook_theme().
 */
function culturefeed_userpoints_ui_theme() {

  $path = drupal_get_path('module', 'culturefeed_userpoints_ui') . '/theme';

  return array(

    'culturefeed_userpoints_ui_my_balance' => array(
      'variables' => array(
        'points' => '',
        'points_in_wishlist' => NULL,
        'points_left' => NULL,
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-userpoints-ui-my-balance',
    ),

    'culturefeed_userpoints_ui_exchange_page' => array(
      'variables' => array(
        'points' => '',
        'points_in_wishlist' => NULL,
        'points_left' => NULL,
        'cf_user' => NULL,
        'promotions' => NULL,
        'promotions_form' => array(),
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-userpoints-ui-exchange-page',
    ),

    'culturefeed_userpoints_ui_promotions_list' => array(
      'file' => 'theme.inc',
      'path' => $path,
      'template' => 'culturefeed-userpoints-ui-promotions-list',
      'render element' => 'form',
    ),

    'culturefeed_userpoints_ui_promotions_list_item' => array(
      'file' => 'theme.inc',
      'path' => $path,
      'template' => 'culturefeed-userpoints-ui-promotions-list-item',
      'render element' => 'form',
    ),

    'culturefeed_userpoints_ui_exchange_form' => array(
      'template' => 'culturefeed-userpoints-ui-exchange-form',
      'path' => $path,
      'render element' => 'form',
    ),

    'culturefeed_userpoints_ui_wishlist' => array(
      'variables' => array(
        'promotions' => array(),
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-userpoints-ui-wishlist',
    ),

    'culturefeed_userpoints_ui_wishlist_item' => array(
      'variables' => array(
        'item' => array(),
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-userpoints-ui-wishlist-item',
    ),

    'culturefeed_userpoints_ui_points_earned_message' => array(
      'variables' => array('activity' => NULL),
      'path' => $path,
      'file' => 'theme.inc',
    ),

    'culturefeed_userpoints_ui_points_exchanged_message' => array(
      'variables' => array('promotions' => NULL),
      'path' => $path,
      'file' => 'theme.inc',
    ),

    'culturefeed_userpoints_ui_detail_page' => array(
      'variables' => array(
        'promotion' => array(),
      ),
      'path' => $path,
      'file' => 'theme.inc',
      'template' => 'culturefeed-userpoints-ui-detail-page',
    ),

  );

}

/**
 * Implements hook_block_info().
 */
function culturefeed_userpoints_ui_block_info() {
  $blocks = array();

  $blocks['culturefeed-userpoints-balance'] = array(
    'info' => t('Culturefeed Userpoints UI: Your balance'),
    'cache' => DRUPAL_NO_CACHE,
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function culturefeed_userpoints_ui_block_view($delta) {

  module_load_include('inc', 'culturefeed_userpoints_ui', 'includes/blocks');
  $block = array();

  switch ($delta) {

    case 'culturefeed-userpoints-balance':
      $block['subject'] = 'Mijn puntensaldo';
      $block['content'] = culturefeed_userpoints_ui_block_balance();
      break;
  }

  return $block;

}

/**
 * Implements hook_mail().
 */
function culturefeed_userpoints_ui_mail($key, &$message, $params) {

  switch ($key) {

    case 'userpoints-exchange-request':

      $pointsPromotions = $params['promotions'];
      $wishlistPromotions = $params['wishlist'];
      $values = $params['values'];
      $cf_account = $params['cf_account'];
      $language = $message['language'];

      $message['subject'] .= 'Bende van Vlieg | aanvraag door ' . $cf_account->nick;

      $variables = array();
      $variables['@code'] = $cf_account->id;
      $variables['@givenName'] = $values['givenName'];
      $variables['@familyName'] = $values['familyName'];
      $variables['@street'] = $values['street'];
      $variables['@city'] = $values['city'];
      $variables['@mbox'] = $values['mbox'];

      $promotions = array();
      foreach ($wishlistPromotions as $promotionId => $data) {
        $promotions[] = $data['title'] . ' (aantal: ' . $data['count'] . ' | inruilwaarde: ' . CultureFeedUserpointsWishlist::getRealPoints($data['points']) . ' punten)
    Bekijk online: ' . url('culturefeed/promotion/' . $data['promotion_id'], array('absolute' => TRUE)) . '
';
      }

      $variables['@url_admin'] = url('http://test.uitid.be/culturefeed/rest/admin/grantedpointspromotions', array('absolute' => TRUE));
      $variables['@promotion'] = implode("\n", $promotions);

      $message['body'][] = format_string('Culturefeed User ID:
@code

Voordeel:
  @promotion

Contactgegevens:
  - @givenName @familyName
  - @street
  - @city
  - @mbox

Beheer:
  @url_admin ', $variables);

    break;

  }
}

/**
 * Implements hook_culturefeed_ui_profile_box_dropdown_items().
 * @param array $items
 */
function culturefeed_userpoints_ui_culturefeed_ui_profile_box_main_items($cf_account) {

  $items = array();

  $data = 'Puntensaldo ';
  $data .= '<span class="userpoints">' . CultureFeedUserpointsWishlist::getRealPoints($cf_account->points) . '</span>';
  $data .= '<span class="check-again">' . l('Inruilen', 'culturefeed/userpoints/exchange') . '</span>';

  $items['my-points'] = array(
    'data' =>  $data,
    'class' => 'points-balance',
    'weight' => -18,
  );

  return $items;

}

/**
 * Implements hook_culturefeed_social_activity_created().
 */
function culturefeed_userpoints_ui_culturefeed_social_activity_created($activity) {

  if (!empty($activity->points)) {
    drupal_set_message(theme('culturefeed_userpoints_ui_points_earned_message', array('activity' => $activity)));
  }

}

/**
 * Submit handler to add/remove points promotions.
 *
 * @param array $form
 * @param array $form_state
 */
function culturefeed_userpoints_ui_promotions_list_form_submit($form, &$form_state) {

  $form_state['rebuild'] = TRUE;

  $selected_button = $form_state['clicked_button']['#name'];
  $promotion_id = str_replace("select_btn_", "", $selected_button);
  $promotion_count = $form_state['values']['list'][$promotion_id]['select_count'];

  // We need this to be able to retrieve 1 item.
  // @todo: remove/refactor this if the api method exists.
  $promotion_points = $form_state['promotion_points'] = culturefeed_userpoints_ui_get_pointspromotions();

  // Change the selection in the cart.
  $promotion = NULL;
  foreach ($promotion_points->objects as $object) {
    if ($object->id == $promotion_id) {
      $promotion = $object;
    }
  }
  $points_diff = CultureFeedUserpointsWishlist::add($promotion_id, $promotion_count, $promotion);

  // Check if this is a non ajax submit.
  if (arg(1) != 'ajax') {
    drupal_set_message('Het voordeel werd toegevoegd aan uw promotie mandje.');
  }

}

/**
 * Ajax Callback handler to add/remove points promotions.
 * Save functionality is already done. This should just do the commands.
 */
function culturefeed_userpoints_ui_promotions_list_form_callback($form, &$form_state) {
  return culturefeed_userpoints_ui_promotions_list_ajax_refresh($form, $form_state['promotion_points']);
}

