<?php
use Symfony\Component\Console\Output\NullOutput;

/**
 * @file
 * Performs searches to the Cultuurnet api.
 * 
 * @todo 
 * - Fix the function culturefeed_search_ui_activity_recommend_link so that the function
 *   "culturefeed_ui_block_users_recommends_config" is moved to correct place 
 * - check if it wouldn't be better to just use the convenience of 
 *   culturefeed_agenda > culturefeed_search_ui. This way the search ui can declare 
 *   the searchable types, it can have the search block, the sortorder block/functions, ...
 * -
 * 
 */

module_load_include('inc', 'culturefeed_agenda', 'includes/helpers');

/**
 * Implements hook_theme().
 */
function culturefeed_agenda_theme() {

  $path = drupal_get_path('module', 'culturefeed_agenda') . '/theme';

  return array(
    'culturefeed_event_summary' => array(
      'variables' => array('item' => NULL),
      'template' => 'culturefeed-event-summary',
      'path' => $path,
      'file' => 'theme.inc',
    ),
    'culturefeed_event' => array(
      'variables' => array('item' => NULL),
      'template' => 'culturefeed-event',
      'path' => $path,
      'file' => 'theme.inc',
    ),
    
  );

}

/**
 * Implements hook_menu().
 */
function culturefeed_agenda_menu() {

  $items = array();

  // Menu path for detail pages.
  $items['agenda/a/%/%culturefeed_agenda_actor'] = array(
    'title callback' => 'culturefeed_agenda_detail_title',
    'title arguments' => array(3),
    'page callback' => 'culturefeed_agenda_detail_page',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['agenda/e/%/%culturefeed_agenda_event'] = array(
    'title callback' => 'culturefeed_ui_agenda_detail_title',
    'title arguments' => array(3),
    'page callback' => 'culturefeed_agenda_detail_page',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  $items['agenda/p/%/%culturefeed_agenda_production'] = array(
    'title callback' => 'culturefeed_agenda_detail_title',
    'title arguments' => array(3),
    'page callback' => 'culturefeed_agenda_detail_page',
    'page arguments' => array(3),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
    'file' => 'includes/pages.inc',
  );

  return $items;

}

/**
 * Implements hook_culturefeed_search_page_info().
 */
function culturefeed_agenda_culturefeed_search_page_info() {
  return array(
    'activiteiten' => array(
      'path' => 'agenda/search',
      'page_title' => 'Agenda',
      'search_title' => 'Activiteiten',
      'class_name' => 'CultureFeedAgendaPage',
    ),
  );
}

/**
 * Load an event from the api.
 */
function culturefeed_agenda_event_load($cdb_id) {
  return culturefeed_search_item_load($cdb_id);
}

/**
 * Load an actor from the api.
 */
function culturefeed_agenda_actor_load($cdb_id) {
  return culturefeed_search_item_load($cdb_id);
}

/**
 * Load a production from the api.
 */
function culturefeed_agenda_production_load($cdb_id) {
  return culturefeed_search_item_load($cdb_id);
}
